function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 16-Jun-2016 12:44:28.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx8 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [131;150.738560582987;3144;317.895;9.89005803803143;3.80795463509266;-9.93781077893583e-05;-5.81819398197894e-05];
x1_step1.gain = [0.0625;0.0567718171976921;0.00073909830007391;0.0351345653854262;0.327865726618733;0.911127959254476;5429.56849758427;8149.65422816111];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.1827075341367368;-1.4596788621708088;1.0536482439486072;-1.0799173001594067;0.4070856491185415;-0.18251767064570021;-0.62960682794249445;0.85844342956512754;-1.4330205024127811;-1.9141867285525929];
IW1_1 = [-0.20876133834414812 -0.43495059835991445 -1.2750625211323097 -0.49337529445304229 0.3716351886252095 -0.52622059047501846 0.15884860475957563 0.61026766925516052;0.65481031108510834 0.25971005217560239 0.17725829751751507 0.49696695160998783 -0.20664557453739585 -0.90459738495583908 1.1915898833282721 0.65311085692164528;-0.18423820533548288 -0.6048138943411453 0.39694739204069807 -0.68530166304518614 0.78317887747118953 0.9368501088623884 -0.72356240730053867 0.798172201637106;0.42486172745063788 0.2941531319835991 -0.16963109382294683 -0.97529453438630953 0.40002253559457446 0.69870365901837483 -0.4439930332508466 1.4136538582973868;-0.16084452447241687 -0.7412337836384203 -0.17054800580223856 0.55612442590836497 -0.74895958926584116 -0.079792327310935621 -1.2224848760331823 -0.75601940541391244;-1.0045289878741461 0.8906229511653514 0.28943992666150264 -0.097463284972644448 0.21405069492197351 0.32874758823743844 -0.93569049583900155 -0.7591256017352177;-1.1774355684544127 -0.88352371983212408 0.68280729375064153 -0.16465249415040456 0.47095561767713723 0.076564114798400223 -0.50470156006474132 0.72595646369700062;0.70379336045733609 0.81286500300219655 0.6833993662815212 0.56253148350045157 0.27676982904291303 0.29783568298965712 -0.10355138182943811 -1.1633933797269347;-0.066159619066023453 -0.95739781138081004 0.48603642043323525 0.96858205144917409 1.2008695993874789 0.076965048689664944 -0.34700045737074625 0.10851011679829732;-0.86793434095364075 -0.53996336182845106 1.1374491948758552 -0.36682113785457632 -0.55283059116400735 0.51013389102577056 0.67098161137782164 0.097270755020706839];

% Layer 2
b2 = -0.80722664561023105;
LW2_1 = [0.86374228133618025 -0.014186246732628836 -0.12376604342633868 -0.047270113977597561 0.32605629359556576 -0.44094892635326527 -0.47301031246870739 -0.6862087481791117 0.032596369247265583 -0.53036313538883462];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 119;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
