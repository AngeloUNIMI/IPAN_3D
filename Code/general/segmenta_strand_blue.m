function [mask, retvalue] = segmenta_strand_blue(im)
retvalue = 1;

imr = im(:,:,1);
img = im(:,:,2);
imb = im(:,:,3);


t1 = imr - imb;%
%t1 = rgb2gray(im);

t1 = normalizzaImg(t1);


%rimuoviamo lo sfondo
t2 = imtophat(t1, strel('disk', 60));


% Auto-generated by imageSegmenter app on 14-May-2015
%----------------------------------------------------
thotsu = graythresh(t2) * 1.5; %un po' di più così sottosegmentiamo per sicurezza

% Initialize segmentation with threshold
mask = (t2 > thotsu);


%controlliamo se troppi comp connessi -> immagine vuota e segm sbarella
[L, num] = bwlabel(mask, 8);

if num > 1000;
    retvalue = -1;
    mask = zeros(size(im,1),size(im,2));
    return;
end, %end if num


% Evolve segmentation
BW = activecontour(t2, mask, 100, 'Chan-Vese');

% Fill holes
BW = imfill(BW, 'holes');




% %figure
% figure, imshow(im)
% figure, imshow(t1)
% figure, imshow(t2)
% figure, imshow(mask)
% figure, imshow(BW)
% pause

mask = BW;




%rimuoviamo componenti connessi con area inferiore a tot
[L, num] = bwlabel(mask, 8);
stats = regionprops(mask, 'all');
for j = 1 : numel(stats)
    if stats(j).Area < 1000
        mask(L == j) = 0;
    end
end
        







% 
% otsuth = graythresh(t2);
% t3 = t2 > otsuth;
% 
% %remove shadows
% %y = graythresh(img);
% %t4 = img > y;
% t4 = img > 0.5;
% 
% t5 = t3 .* t4;
% 
% 
% mask = connComp2(t5,1,1);